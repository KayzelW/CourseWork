@page "/bin"
@inject AuthService authService
@using BookDesktop.Service
@using Classes
@inject BinService bin

<nav class="navbar navbar-expand-lg bg-body-tertiary">
    <div class="container-fluid">
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" aria-current="page" href="/personal_page">Главная страница</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/books">Каталог</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" href="/bin">Корзина</a>
                </li>
            </ul>
        </div>
    </div>
</nav>
<div class="d-flex">
    <div class="p-2 w-100">
        <h1>Корзина</h1>
    </div>
    <div class="p-2 flex-shrink-1">
        <a class="btn btn-primary" href="/books" role="button">Книги</a>
    </div>
</div>

<table class="table table-bordered border-primary">
    <tr>
        <td>Наименование</td>
        <td>Автор</td>
        <td>Стоимость</td>
        <td>Экземпляров на складе</td>
        <td>Действия</td>
    </tr>
    @foreach (var book in bin.books)
    {
        <tr>
            <td>@book.Name</td>
            <td>@book.Author</td>
            <td>@book.Price</td>
            <td>@book.Amount</td>
            <td>
                <button type="button" class="btn btn-outline-secondary" onclick="@(() => { RemoveFromBin(book); })">Удалить из корзины</button>
            </td>
        </tr>
    }
</table>


@code {

    public void RemoveFromBin(Book book)
    {
        bin.books.Remove(book);
        InvokeAsync(StateHasChanged);
    }

}